{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from \"rxjs\";\nimport { retry, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n      this.baseurl = 'http://127.0.0.1:8080/'; // TODO: Falta averiguar si es el mismo o cambio la base url.\n\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json;charset=utf-8'\n        })\n      };\n    }\n\n    errorHandl(error) {\n      let mensajeError = '';\n\n      if (error.error instanceof ErrorEvent) {\n        mensajeError = error.error.message;\n      } else {\n        mensajeError = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n\n      console.log(mensajeError);\n      return throwError(mensajeError);\n    } // Ejemplo ilustrativo, no tiene sentido lo escrito, solo es para saber estructura.\n\n\n    iniciarSesion(data) {\n      return this.http.post(this.baseurl + 'iniciar-sesion', data, this.httpOptions).pipe(retry(1), catchError(this.errorHandl));\n    }\n\n  }\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}